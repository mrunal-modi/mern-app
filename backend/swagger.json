{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "CRUD",
      "description": "Application API",
      "license": {
        "name": "MyExampleApp",
        "url": "https://MyExampleApp.com"
      }
    },
    "host": "",
    "basePath": "/api",
    "tags": [
      {
        "name": "CRUD APIs",
        "description": "Learn APIs using CRUD methods in NodeJs"
      }
    ],
    "schemes": ["http"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
  
    "paths": {
      "/todos": {
        "post": {
          "tags": ["Create"],
          "description": "Create new todo",
          "parameters": [
            {
              "name": "name",
              "in": "body",
              "description": "Todo that we want to create using the Frontend Signup form",
              "schema": {
                "$ref": "#/definitions/TodoSchema"
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "New todo is created",
              "schema": {
                "$ref": "#/definitions/TodoSchema"
              }
            }
          }
        },
        "get": {
          "tags": ["Read"],
          "description": "Get all todos",
          "parameters": [
            {
              "name": "task",
              "in": "query",
              "description": "Filter for todo by task"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/todos/{task}": {
        "get": {
          "tags": ["Read"],
          "description": "Get specific todo based on task",
          "parameters": [
            {
              "name": "task",
              "in": "path",
              "description": "todo that we want to list"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        },
        "put": {
          "tags": ["Update"],
          "description": "Update specific record",
          "parameters": [
            {
              "name": "task",
              "in": "path",
              "description": "task that we update"
            },
            {
              "name": "task",
              "in": "body",
              "description": "new task",
              "schema": {
                "$ref": "#/definitions/TodoSchema"
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "Updated",
              "schema": {
                "$ref": "#/definitions/TodoSchema"
              }
            }
          }
        },
        "delete": {
          "tags": ["Delete"],
          "description": "Delete specific todo based on task",
          "parameters": [
            {
              "name": "task",
              "in": "path",
              "description": "todo that we want to list"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      }
    },
    "definitions": {
      "TodoSchema": {
        "required": [ "task" ],
        "properties": {
          "task": {
            "type": "string"
          }
        }
      }
    }
  }
  